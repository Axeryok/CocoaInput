buildscript {
    repositories {
        jcenter()
        maven { url = "https://maven.minecraftforge.net" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

import org.apache.tools.ant.taskdefs.condition.Os

version = "3.1.5"
group= "com.Axeryok.CocoaInput" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CocoaInput-[1.9-1.12.2]"

sourceCompatibility = targetCompatibility = '1.6' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.6'
}


minecraft {
    version = "1.11.2-13.20.0.2315"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161220"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
	manifest{
		attributes 'FMLCorePlugin':'com.Axeryok.CocoaInput.CocoaInputCorePlugin',
		'FMLCorePluginContainsFMLMod':'true'
		attributes 'FMLAT':'cocoainput_at.cfg'
	}
}

deobfCompileDummyTask.doFirst {
    if (!Os.isFamily(Os.FAMILY_WINDOWS)) {
        println 'Building libcocoainput.'
        String cm = "./build_lib_for_mac.sh"
        Process p = cm.execute()
        p.waitFor()
    }
}

// Charset settings
// NOTE: This is for Windows
def defaultEncoding = 'UTF-8'
compileJava {
    options.encoding = defaultEncoding  // src/main/java配下の*.javaに影響
}
compileTestJava {
    options.encoding = defaultEncoding  // src/test/java配下の*.javaに影響
}
